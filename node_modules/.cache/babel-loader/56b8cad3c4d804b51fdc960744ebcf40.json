{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar CID = require('cids');\n\nvar withIs = require('class-is');\n/**\n * Represents an immutable block of data that is uniquely referenced with a cid.\n *\n * @example\n * const block = new Block(Uint8Array.from([0, 1, 2, 3]), new CID('...'))\n */\n\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @constructor\n   * @param {Uint8Array} data - The data to be stored in the block as a Uint8Array.\n   * @param {CID} cid - The cid of the data\n   */\n  function Block(data, cid) {\n    _classCallCheck(this, Block);\n\n    if (!data || !(data instanceof Uint8Array)) {\n      throw new Error('first argument  must be a Uint8Array');\n    }\n\n    if (!cid || !CID.isCID(cid)) {\n      throw new Error('second argument must be a CID');\n    }\n\n    this._data = data;\n    this._cid = cid;\n  }\n  /**\n   * The data of this block.\n   *\n   * @type {Uint8Array}\n   */\n\n\n  _createClass(Block, [{\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    },\n    set: function set(val) {\n      throw new Error('Tried to change an immutable block');\n    }\n    /**\n     * The cid of the data this block represents.\n     *\n     * @type {CID}\n     */\n\n  }, {\n    key: \"cid\",\n    get: function get() {\n      return this._cid;\n    },\n    set: function set(val) {\n      throw new Error('Tried to change an immutable block');\n    } // eslint-disable-next-line valid-jsdoc\n\n    /**\n     * Check if the given value is a Block.\n     * @returns {other is Block}\n     */\n\n  }], [{\n    key: \"isBlock\",\n    value: function isBlock(other) {// eslint-disable-line no-unused-vars\n      // implemented by class-is module\n    }\n  }]);\n\n  return Block;\n}(); // to trick the typings engine\n// https://github.com/ipld/js-ipld-block/pull/55#discussion_r478845002\n\n\nmodule.exports = withIs(module.exports, {\n  className: 'Block',\n  symbolName: '@ipld/js-ipld-block/block'\n});","map":null,"metadata":{},"sourceType":"script"}