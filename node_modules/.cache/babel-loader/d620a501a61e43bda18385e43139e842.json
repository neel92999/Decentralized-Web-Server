{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _awaitAsyncGenerator = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar multiaddr = require('multiaddr');\n\nvar toCamel = require('../lib/object-to-camel');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar multipartRequest = require('../lib/multipart-request');\n\nmodule.exports = configure(function (api) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _put = _wrapAsyncGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(key, value) {\n        var options,\n            res,\n            _iteratorNormalCompletion,\n            _didIteratorError,\n            _iteratorError,\n            _iterator,\n            _step,\n            _value,\n            message,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n                _context.t0 = _awaitAsyncGenerator;\n                _context.t1 = api;\n                _context.t2 = _objectSpread;\n                _context.t3 = {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  searchParams: toUrlSearchParams(_objectSpread({\n                    arg: key\n                  }, options))\n                };\n                _context.next = 7;\n                return _awaitAsyncGenerator(multipartRequest(value, options.headers));\n\n              case 7:\n                _context.t4 = _context.sent;\n                _context.t5 = (0, _context.t2)(_context.t3, _context.t4);\n                _context.t6 = _context.t1.post.call(_context.t1, 'dht/put', _context.t5);\n                _context.next = 12;\n                return (0, _context.t0)(_context.t6);\n\n              case 12:\n                res = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 15;\n                _iterator = _asyncIterator(res.ndjson());\n\n              case 17:\n                _context.next = 19;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 19:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 23;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 23:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 34;\n                  break;\n                }\n\n                message = _value;\n                message = toCamel(message);\n                message.id = new CID(message.id);\n\n                if (message.responses) {\n                  message.responses = message.responses.map(function (_ref) {\n                    var ID = _ref.ID,\n                        Addrs = _ref.Addrs;\n                    return {\n                      id: ID,\n                      addrs: (Addrs || []).map(function (a) {\n                        return multiaddr(a);\n                      })\n                    };\n                  });\n                }\n\n                _context.next = 31;\n                return message;\n\n              case 31:\n                _iteratorNormalCompletion = true;\n                _context.next = 17;\n                break;\n\n              case 34:\n                _context.next = 40;\n                break;\n\n              case 36:\n                _context.prev = 36;\n                _context.t7 = _context[\"catch\"](15);\n                _didIteratorError = true;\n                _iteratorError = _context.t7;\n\n              case 40:\n                _context.prev = 40;\n                _context.prev = 41;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 45;\n                  break;\n                }\n\n                _context.next = 45;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 45:\n                _context.prev = 45;\n\n                if (!_didIteratorError) {\n                  _context.next = 48;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 48:\n                return _context.finish(45);\n\n              case 49:\n                return _context.finish(40);\n\n              case 50:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[15, 36, 40, 50], [41,, 45, 49]]);\n      }));\n\n      function put(_x, _x2) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}