{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _wrapAsyncGenerator = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncGeneratorDelegate = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nvar _asyncIterator = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar configure = require('../lib/configure');\n\nvar normaliseInput = require('ipfs-core-utils/src/pins/normalise-input');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _rmAll = _wrapAsyncGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(source) {\n        var options,\n            _iteratorNormalCompletion,\n            _didIteratorError,\n            _iteratorError,\n            _iterator,\n            _step,\n            _value,\n            _value3,\n            path,\n            recursive,\n            searchParams,\n            res,\n            _iteratorNormalCompletion2,\n            _didIteratorError2,\n            _iteratorError2,\n            _iterator2,\n            _step2,\n            _value2,\n            pin,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                options = options || {};\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 4;\n                _iterator = _asyncIterator(normaliseInput(source));\n\n              case 6:\n                _context.next = 8;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 8:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 12;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 12:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 61;\n                  break;\n                }\n\n                _value3 = _value, path = _value3.path, recursive = _value3.recursive;\n                searchParams = new URLSearchParams(options.searchParams);\n                searchParams.append('arg', \"\".concat(path));\n                if (recursive != null) searchParams.set('recursive', recursive);\n                _context.next = 20;\n                return _awaitAsyncGenerator(api.post('pin/rm', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers,\n                  searchParams: toUrlSearchParams(_objectSpread({}, options, {\n                    arg: \"\".concat(path),\n                    recursive: recursive\n                  }))\n                }));\n\n              case 20:\n                res = _context.sent;\n                _iteratorNormalCompletion2 = true;\n                _didIteratorError2 = false;\n                _context.prev = 23;\n                _iterator2 = _asyncIterator(res.ndjson());\n\n              case 25:\n                _context.next = 27;\n                return _awaitAsyncGenerator(_iterator2.next());\n\n              case 27:\n                _step2 = _context.sent;\n                _iteratorNormalCompletion2 = _step2.done;\n                _context.next = 31;\n                return _awaitAsyncGenerator(_step2.value);\n\n              case 31:\n                _value2 = _context.sent;\n\n                if (_iteratorNormalCompletion2) {\n                  _context.next = 42;\n                  break;\n                }\n\n                pin = _value2;\n\n                if (!pin.Pins) {\n                  _context.next = 37;\n                  break;\n                }\n\n                return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(pin.Pins.map(function (cid) {\n                  return new CID(cid);\n                })), _awaitAsyncGenerator), \"t0\", 36);\n\n              case 36:\n                return _context.abrupt(\"continue\", 39);\n\n              case 37:\n                _context.next = 39;\n                return new CID(pin);\n\n              case 39:\n                _iteratorNormalCompletion2 = true;\n                _context.next = 25;\n                break;\n\n              case 42:\n                _context.next = 48;\n                break;\n\n              case 44:\n                _context.prev = 44;\n                _context.t1 = _context[\"catch\"](23);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context.t1;\n\n              case 48:\n                _context.prev = 48;\n                _context.prev = 49;\n\n                if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n                  _context.next = 53;\n                  break;\n                }\n\n                _context.next = 53;\n                return _awaitAsyncGenerator(_iterator2.return());\n\n              case 53:\n                _context.prev = 53;\n\n                if (!_didIteratorError2) {\n                  _context.next = 56;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 56:\n                return _context.finish(53);\n\n              case 57:\n                return _context.finish(48);\n\n              case 58:\n                _iteratorNormalCompletion = true;\n                _context.next = 6;\n                break;\n\n              case 61:\n                _context.next = 67;\n                break;\n\n              case 63:\n                _context.prev = 63;\n                _context.t2 = _context[\"catch\"](4);\n                _didIteratorError = true;\n                _iteratorError = _context.t2;\n\n              case 67:\n                _context.prev = 67;\n                _context.prev = 68;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 72;\n                  break;\n                }\n\n                _context.next = 72;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 72:\n                _context.prev = 72;\n\n                if (!_didIteratorError) {\n                  _context.next = 75;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 75:\n                return _context.finish(72);\n\n              case 76:\n                return _context.finish(67);\n\n              case 77:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 63, 67, 77], [23, 44, 48, 58], [49,, 53, 57], [68,, 72, 76]]);\n      }));\n\n      function rmAll(_x) {\n        return _rmAll.apply(this, arguments);\n      }\n\n      return rmAll;\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}