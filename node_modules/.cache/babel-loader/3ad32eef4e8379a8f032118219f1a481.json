{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _awaitAsyncGenerator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ls = _wrapAsyncGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(path) {\n        var options,\n            res,\n            _iteratorNormalCompletion,\n            _didIteratorError,\n            _iteratorError,\n            _iterator,\n            _step,\n            _value,\n            result,\n            _iteratorNormalCompletion2,\n            _didIteratorError2,\n            _iteratorError2,\n            _iterator2,\n            _step2,\n            link,\n            entry,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                _context.next = 3;\n                return _awaitAsyncGenerator(api.post('ls', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  searchParams: toUrlSearchParams(_objectSpread({\n                    arg: \"\".concat(path instanceof Uint8Array ? new CID(path) : path)\n                  }, options)),\n                  headers: options.headers\n                }));\n\n              case 3:\n                res = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 6;\n                _iterator = _asyncIterator(res.ndjson());\n\n              case 8:\n                _context.next = 10;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 10:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 14;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 14:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 58;\n                  break;\n                }\n\n                result = _value;\n                result = result.Objects;\n\n                if (result) {\n                  _context.next = 20;\n                  break;\n                }\n\n                throw new Error('expected .Objects in results');\n\n              case 20:\n                result = result[0];\n\n                if (result) {\n                  _context.next = 23;\n                  break;\n                }\n\n                throw new Error('expected one array in results.Objects');\n\n              case 23:\n                result = result.Links;\n\n                if (Array.isArray(result)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                throw new Error('expected one array in results.Objects[0].Links');\n\n              case 26:\n                _iteratorNormalCompletion2 = true;\n                _didIteratorError2 = false;\n                _iteratorError2 = undefined;\n                _context.prev = 29;\n                _iterator2 = result[Symbol.iterator]();\n\n              case 31:\n                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                  _context.next = 41;\n                  break;\n                }\n\n                link = _step2.value;\n                entry = {\n                  name: link.Name,\n                  path: path + '/' + link.Name,\n                  size: link.Size,\n                  cid: new CID(link.Hash),\n                  type: typeOf(link),\n                  depth: link.Depth || 1\n                };\n\n                if (link.Mode) {\n                  entry.mode = parseInt(link.Mode, 8);\n                }\n\n                if (link.Mtime !== undefined && link.Mtime !== null) {\n                  entry.mtime = {\n                    secs: link.Mtime\n                  };\n\n                  if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n                    entry.mtime.nsecs = link.MtimeNsecs;\n                  }\n                }\n\n                _context.next = 38;\n                return entry;\n\n              case 38:\n                _iteratorNormalCompletion2 = true;\n                _context.next = 31;\n                break;\n\n              case 41:\n                _context.next = 47;\n                break;\n\n              case 43:\n                _context.prev = 43;\n                _context.t0 = _context[\"catch\"](29);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context.t0;\n\n              case 47:\n                _context.prev = 47;\n                _context.prev = 48;\n\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n\n              case 50:\n                _context.prev = 50;\n\n                if (!_didIteratorError2) {\n                  _context.next = 53;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 53:\n                return _context.finish(50);\n\n              case 54:\n                return _context.finish(47);\n\n              case 55:\n                _iteratorNormalCompletion = true;\n                _context.next = 8;\n                break;\n\n              case 58:\n                _context.next = 64;\n                break;\n\n              case 60:\n                _context.prev = 60;\n                _context.t1 = _context[\"catch\"](6);\n                _didIteratorError = true;\n                _iteratorError = _context.t1;\n\n              case 64:\n                _context.prev = 64;\n                _context.prev = 65;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 69;\n                  break;\n                }\n\n                _context.next = 69;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 69:\n                _context.prev = 69;\n\n                if (!_didIteratorError) {\n                  _context.next = 72;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 72:\n                return _context.finish(69);\n\n              case 73:\n                return _context.finish(64);\n\n              case 74:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 60, 64, 74], [29, 43, 47, 55], [48,, 50, 54], [65,, 69, 73]]);\n      }));\n\n      function ls(_x) {\n        return _ls.apply(this, arguments);\n      }\n\n      return ls;\n    }()\n  );\n});\n\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n\n    case 2:\n      return 'file';\n\n    default:\n      return 'unknown';\n  }\n}","map":null,"metadata":{},"sourceType":"script"}