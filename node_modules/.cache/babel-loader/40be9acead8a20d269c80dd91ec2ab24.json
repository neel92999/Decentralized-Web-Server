{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar addAll = require('./add-all');\n\nvar last = require('it-last');\n\nvar configure = require('../lib/configure');\n\nmodule.exports = function (options) {\n  var all = addAll(options);\n  return configure(function () {\n    return (\n      /*#__PURE__*/\n      function () {\n        var _add = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(path) {\n          var options,\n              _args = arguments;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                  return _context.abrupt(\"return\", last(all(_objectSpread({\n                    path: path\n                  }, options), options)));\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function add(_x) {\n          return _add.apply(this, arguments);\n        }\n\n        return add;\n      }()\n    );\n  })(options);\n};","map":null,"metadata":{},"sourceType":"script"}