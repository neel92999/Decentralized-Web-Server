{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar modeToString = require('../lib/mode-to-string');\n\nvar mtimeToObject = require('../lib/mtime-to-object');\n\nvar configure = require('../lib/configure');\n\nvar multipartRequest = require('../lib/multipart-request');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar anySignal = require('any-signal');\n\nvar AbortController = require('abort-controller').default;\n\nmodule.exports = configure(function (api) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(path, input) {\n        var options,\n            controller,\n            signal,\n            res,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n                // allow aborting requests on body errors\n                controller = new AbortController();\n                signal = anySignal([controller.signal, options.signal]);\n                _context.t0 = api;\n                _context.t1 = _objectSpread;\n                _context.t2 = {\n                  timeout: options.timeout,\n                  signal: signal,\n                  searchParams: toUrlSearchParams(_objectSpread({\n                    arg: path,\n                    streamChannels: true,\n                    count: options.count || options.length\n                  }, options))\n                };\n                _context.next = 8;\n                return multipartRequest({\n                  content: input,\n                  path: 'arg',\n                  mode: modeToString(options.mode),\n                  mtime: mtimeToObject(options.mtime)\n                }, controller, options.headers);\n\n              case 8:\n                _context.t3 = _context.sent;\n                _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n                _context.next = 12;\n                return _context.t0.post.call(_context.t0, 'files/write', _context.t4);\n\n              case 12:\n                res = _context.sent;\n                _context.next = 15;\n                return res.text();\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}