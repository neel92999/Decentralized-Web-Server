{"ast":null,"code":"import _regeneratorRuntime from \"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vishwa/Project/meme/src/components/App.js\";\nimport React, { Component } from 'react';\nimport logo from '../logo.png';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'localhost',\n  port: '5001',\n  protocol: 'http'\n}); //const ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https'})\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, networkData, abi, address, contract, memeHash;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                networkData = Meme.networks[networkId];\n\n                if (!networkData) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                abi = Meme.abi;\n                address = networkData.address;\n                contract = web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                });\n                _context2.next = 16;\n                return contract.methods.get().call();\n\n              case 16:\n                memeHash = _context2.sent;\n                this.setState({\n                  memeHash: memeHash\n                });\n                _context2.next = 21;\n                break;\n\n              case 20:\n                window.alert('Smart contract not deployed to detected network!!');\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      console.log('file captured..'); //IPFS processing... \n\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n      };\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"submitting the form...\");\n      var file = ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n      }).then(function (token) {\n        _this.state.contract.methods.set(token[\"path\"]).send({\n          from: _this.state.account\n        }).then(function (r) {\n          _this.setState({\n            memeHash: token[\"path\"]\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      memeHash: \"QmSU9m6q6RxMdMmL1AAmnhHNiiqsj2icy4B5MvssemhiQE\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Please use metamask');\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Decentralized web server\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://127.0.0.1:8080/ipfs/\" + this.state.memeHash,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Upload photo\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/vishwa/Project/meme/src/components/App.js"],"names":["React","Component","logo","Web3","Meme","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","abi","address","contract","Contract","methods","get","call","memeHash","alert","props","captureFile","event","preventDefault","console","log","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","onSubmit","add","state","error","then","token","set","send","from","r","ethereum","enable","currentProvider"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.png';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json'\n\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'localhost', port: '5001', protocol: 'http' })\n//const ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https'})\n\nclass App extends Component {\n\n  async componentWillMount() {\n     await this.loadWeb3()\n     await this.loadBlockchainData()\n  }\n\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Meme.networks[networkId]\n    if(networkData) {\n      const abi = Meme.abi\n      const address = networkData.address\n      const contract = web3.eth.Contract(abi, address)\n      this.setState({ contract: contract })\n      const memeHash = await contract.methods.get().call()\n      this.setState({ memeHash })\n\n    } else {\n       window.alert('Smart contract not deployed to detected network!!')\n    }\n  }\n   \n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      memeHash: \"QmSU9m6q6RxMdMmL1AAmnhHNiiqsj2icy4B5MvssemhiQE\"\n    };\n  }\n\n  async loadWeb3(){\n    if (window.ethereum) {\n       window.web3 = new Web3(window.ethereum)\n       await window.ethereum.enable()\n    } if (window.web3) {\n       window.web3 = new Web3(window.web3.currentProvider) \n    } else {\n      window.alert('Please use metamask')\n    }\n  }\n\n  captureFile=(event) => {\n    event.preventDefault()\n    console.log('file captured..')\n\n   //IPFS processing... \n    const file=event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend= () => {\n      this.setState({ buffer: Buffer(reader.result) })\n    }\n  }\n\n  onSubmit = (event) => {\n   event.preventDefault()\n   console.log(\"submitting the form...\")\n\n   const file=ipfs.add(this.state.buffer, (error,result) => {\n     console.log('Ipfs result', result)\n     if(error) {\n        console.error(error)\n        return\n     }\n\n\n   }).then(token => { \n       this.state.contract.methods.set(token[\"path\"]).send({ from: this.state.account }).then((r) => {\n          this.setState({memeHash:token[\"path\"]}) \n         })\n        \n\n\n                    })\n      \n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            \n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n          Decentralized web server\n          </a>\n\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-white\">{this.state.account}</small>\n            </li>\n          </ul>\n\n\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                 \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={\"http://127.0.0.1:8080/ipfs/\"+this.state.memeHash} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <p>&nbsp;</p>\n                <h2>Upload photo</h2>\n                <form onSubmit={this.onSubmit} >\n                  <input type='file' onChange={this.captureFile}/> \n                  <input type='submit'/>\n                  </form>\n\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}