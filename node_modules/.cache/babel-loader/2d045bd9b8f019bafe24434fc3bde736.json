{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncIterator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _awaitAsyncGenerator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/vishwa/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar errCode = require('err-code');\n\nvar CID = require('cids');\n/*\n * Transform one of:\n *\n * ```\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```\n * AsyncIterable<{ path: CID|String, recursive, metadata }>\n * ```\n *\n * @param input Object\n * @return AsyncIterable<{ path: CID|String, recursive, metadata }>\n */\n\n\nmodule.exports = function normaliseInput(input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(\"Unexpected input: \".concat(input), 'ERR_UNEXPECTED_INPUT'));\n  } // CID|String\n\n\n  if (CID.isCID(input) || input instanceof String || typeof input === 'string') {\n    return _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return toPin({\n                cid: input\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  } // { cid: CID recursive, metadata }\n\n\n  if (input.cid != null || input.path != null) {\n    return _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return toPin(input);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  } // Iterable<?>\n\n\n  if (input[Symbol.iterator]) {\n    return _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var iterator, first, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, cid, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, obj;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // eslint-disable-line require-await\n              iterator = input[Symbol.iterator]();\n              first = iterator.next();\n\n              if (!first.done) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", iterator);\n\n            case 4:\n              if (!(CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string')) {\n                _context3.next = 34;\n                break;\n              }\n\n              _context3.next = 7;\n              return toPin({\n                cid: first.value\n              });\n\n            case 7:\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context3.prev = 10;\n              _iterator3 = iterator[Symbol.iterator]();\n\n            case 12:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context3.next = 19;\n                break;\n              }\n\n              cid = _step3.value;\n              _context3.next = 16;\n              return toPin({\n                cid: cid\n              });\n\n            case 16:\n              _iteratorNormalCompletion3 = true;\n              _context3.next = 12;\n              break;\n\n            case 19:\n              _context3.next = 25;\n              break;\n\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](10);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context3.t0;\n\n            case 25:\n              _context3.prev = 25;\n              _context3.prev = 26;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 28:\n              _context3.prev = 28;\n\n              if (!_didIteratorError3) {\n                _context3.next = 31;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 31:\n              return _context3.finish(28);\n\n            case 32:\n              return _context3.finish(25);\n\n            case 33:\n              return _context3.abrupt(\"return\");\n\n            case 34:\n              if (!(first.value.cid != null || first.value.path != null)) {\n                _context3.next = 64;\n                break;\n              }\n\n              _context3.next = 37;\n              return toPin(first.value);\n\n            case 37:\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context3.prev = 40;\n              _iterator4 = iterator[Symbol.iterator]();\n\n            case 42:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context3.next = 49;\n                break;\n              }\n\n              obj = _step4.value;\n              _context3.next = 46;\n              return toPin(obj);\n\n            case 46:\n              _iteratorNormalCompletion4 = true;\n              _context3.next = 42;\n              break;\n\n            case 49:\n              _context3.next = 55;\n              break;\n\n            case 51:\n              _context3.prev = 51;\n              _context3.t1 = _context3[\"catch\"](40);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context3.t1;\n\n            case 55:\n              _context3.prev = 55;\n              _context3.prev = 56;\n\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n\n            case 58:\n              _context3.prev = 58;\n\n              if (!_didIteratorError4) {\n                _context3.next = 61;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 61:\n              return _context3.finish(58);\n\n            case 62:\n              return _context3.finish(55);\n\n            case 63:\n              return _context3.abrupt(\"return\");\n\n            case 64:\n              throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n\n            case 65:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[10, 21, 25, 33], [26,, 28, 32], [40, 51, 55, 63], [56,, 58, 62]]);\n    }))();\n  } // AsyncIterable<?>\n\n\n  if (input[Symbol.asyncIterator]) {\n    return _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var iterator, first, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, cid, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, obj;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              iterator = input[Symbol.asyncIterator]();\n              _context4.next = 3;\n              return _awaitAsyncGenerator(iterator.next());\n\n            case 3:\n              first = _context4.sent;\n\n              if (!first.done) {\n                _context4.next = 6;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", iterator);\n\n            case 6:\n              if (!(CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string')) {\n                _context4.next = 44;\n                break;\n              }\n\n              _context4.next = 9;\n              return toPin({\n                cid: first.value\n              });\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context4.prev = 11;\n              _iterator = _asyncIterator(iterator);\n\n            case 13:\n              _context4.next = 15;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 15:\n              _step = _context4.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context4.next = 19;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 19:\n              _value = _context4.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context4.next = 27;\n                break;\n              }\n\n              cid = _value;\n              _context4.next = 24;\n              return toPin({\n                cid: cid\n              });\n\n            case 24:\n              _iteratorNormalCompletion = true;\n              _context4.next = 13;\n              break;\n\n            case 27:\n              _context4.next = 33;\n              break;\n\n            case 29:\n              _context4.prev = 29;\n              _context4.t0 = _context4[\"catch\"](11);\n              _didIteratorError = true;\n              _iteratorError = _context4.t0;\n\n            case 33:\n              _context4.prev = 33;\n              _context4.prev = 34;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context4.next = 38;\n                break;\n              }\n\n              _context4.next = 38;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 38:\n              _context4.prev = 38;\n\n              if (!_didIteratorError) {\n                _context4.next = 41;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 41:\n              return _context4.finish(38);\n\n            case 42:\n              return _context4.finish(33);\n\n            case 43:\n              return _context4.abrupt(\"return\");\n\n            case 44:\n              if (!(first.value.cid != null || first.value.path != null)) {\n                _context4.next = 82;\n                break;\n              }\n\n              _context4.next = 47;\n              return toPin(first.value);\n\n            case 47:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _context4.prev = 49;\n              _iterator2 = _asyncIterator(iterator);\n\n            case 51:\n              _context4.next = 53;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 53:\n              _step2 = _context4.sent;\n              _iteratorNormalCompletion2 = _step2.done;\n              _context4.next = 57;\n              return _awaitAsyncGenerator(_step2.value);\n\n            case 57:\n              _value2 = _context4.sent;\n\n              if (_iteratorNormalCompletion2) {\n                _context4.next = 65;\n                break;\n              }\n\n              obj = _value2;\n              _context4.next = 62;\n              return toPin(obj);\n\n            case 62:\n              _iteratorNormalCompletion2 = true;\n              _context4.next = 51;\n              break;\n\n            case 65:\n              _context4.next = 71;\n              break;\n\n            case 67:\n              _context4.prev = 67;\n              _context4.t1 = _context4[\"catch\"](49);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context4.t1;\n\n            case 71:\n              _context4.prev = 71;\n              _context4.prev = 72;\n\n              if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n                _context4.next = 76;\n                break;\n              }\n\n              _context4.next = 76;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 76:\n              _context4.prev = 76;\n\n              if (!_didIteratorError2) {\n                _context4.next = 79;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 79:\n              return _context4.finish(76);\n\n            case 80:\n              return _context4.finish(71);\n\n            case 81:\n              return _context4.abrupt(\"return\");\n\n            case 82:\n              throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n\n            case 83:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[11, 29, 33, 43], [34,, 38, 42], [49, 67, 71, 81], [72,, 76, 80]]);\n    }))();\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n};\n\nfunction toPin(input) {\n  var pin = {\n    path: input.cid || input.path,\n    recursive: input.recursive !== false\n  };\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n\n  return pin;\n}","map":null,"metadata":{},"sourceType":"script"}