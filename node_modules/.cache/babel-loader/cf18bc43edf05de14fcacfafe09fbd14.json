{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"/home/neel/Desktop/Project/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar CID = require('cids');\n\nvar _require = require('ipld-dag-pb'),\n    DAGNode = _require.DAGNode;\n\nvar multipartRequest = require('../lib/multipart-request');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar anySignal = require('any-signal');\n\nvar AbortController = require('abort-controller').default;\n\nvar unit8ArrayToString = require('uint8arrays/to-string');\n\nvar uint8ArrayFromString = require('uint8arrays/from-string');\n\nmodule.exports = configure(function (api) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(obj) {\n        var options,\n            tmpObj,\n            buf,\n            controller,\n            signal,\n            res,\n            _ref2,\n            Hash,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                tmpObj = {\n                  Data: null,\n                  Links: []\n                };\n\n                if (!(obj instanceof Uint8Array)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                if (!options.enc) {\n                  tmpObj = {\n                    Data: unit8ArrayToString(obj),\n                    Links: []\n                  };\n                }\n\n                _context.next = 16;\n                break;\n\n              case 6:\n                if (!DAGNode.isDAGNode(obj)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                tmpObj = {\n                  Data: unit8ArrayToString(obj.Data),\n                  Links: obj.Links.map(function (l) {\n                    return {\n                      Name: l.Name,\n                      Hash: l.Hash.toString(),\n                      Size: l.Tsize\n                    };\n                  })\n                };\n                _context.next = 16;\n                break;\n\n              case 10:\n                if (!(typeof obj === 'object')) {\n                  _context.next = 15;\n                  break;\n                }\n\n                tmpObj.Data = unit8ArrayToString(obj.Data);\n                tmpObj.Links = obj.Links;\n                _context.next = 16;\n                break;\n\n              case 15:\n                throw new Error('obj not recognized');\n\n              case 16:\n                if (obj instanceof Uint8Array && options.enc) {\n                  buf = obj;\n                } else {\n                  options.enc = 'json';\n                  buf = uint8ArrayFromString(JSON.stringify(tmpObj));\n                } // allow aborting requests on body errors\n\n\n                controller = new AbortController();\n                signal = anySignal([controller.signal, options.signal]);\n                _context.t0 = api;\n                _context.t1 = _objectSpread;\n                _context.t2 = {\n                  timeout: options.timeout,\n                  signal: signal,\n                  searchParams: toUrlSearchParams(options)\n                };\n                _context.next = 24;\n                return multipartRequest(buf, controller, options.headers);\n\n              case 24:\n                _context.t3 = _context.sent;\n                _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n                _context.next = 28;\n                return _context.t0.post.call(_context.t0, 'object/put', _context.t4);\n\n              case 28:\n                res = _context.sent;\n                _context.next = 31;\n                return res.json();\n\n              case 31:\n                _ref2 = _context.sent;\n                Hash = _ref2.Hash;\n                return _context.abrupt(\"return\", new CID(Hash));\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}