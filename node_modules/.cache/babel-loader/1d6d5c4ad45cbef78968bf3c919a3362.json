{"ast":null,"code":"'use strict';\n\nvar encoder = require('./encoder');\n\nfunction fixed64EncodingLength() {\n  return 8;\n}\n\nfunction fixed64Encode(val, buffer, dataView, offset) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = val[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var byte = _step.value;\n      buffer[offset] = byte;\n      offset++;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  fixed64Encode.bytes = 8;\n}\n\nfunction fixed64Decode(buffer, dataView, offset) {\n  var val = buffer.slice(offset, offset + 8);\n  fixed64Decode.bytes = 8;\n  return val;\n}\n\nmodule.exports = encoder(1, fixed64Encode, fixed64Decode, fixed64EncodingLength);","map":null,"metadata":{},"sourceType":"script"}